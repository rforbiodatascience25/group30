---
title: "Group Document"
format:
  html:
    embed-resources: true
    toc: true
    toc-depth: 2
editor: visual
execute:
  echo: true
  cache: true
  freeze: auto
date: 2025-10-07
authors: 
- Isabella T. Christoffersen (s235342)
- Karolina Nordkamp (s244854)
- Malaika Khiljee (s245618)
- Kasia Muncha (s222846)
- Andreas Bach (s205869)
---

# Aim

ghjk

# Load libraries

```{r}
#| message: false

library("tidyverse")
library(broom) 
library(cowplot)
```

# Load data

The Gravier data has been added to a data folder in the GitHub repository. The gravier data contains information of gene expression of 2905 genes from 168 patients, whether the patients eventually showed sign of metastasis is denoted in the 'y'-column where:

-   "poor": means early sign of metastasis

-   "good": means no sign of metastasis

```{r}
load("data/gravier.RData")
```

# Data wrangling

The loaded data consists of 2 large lists so these are firstly combined into columns and transformed into a tibble. The bind_cols() function is used here and binds the columns in order. Usually, it would be preferred to use join() but in this case bind_cols() works. It is then converted to a tibble and the 'y'-column is renamed to 'early_metastasis.'

```{r}
gravier_clean <- gravier |>
  bind_cols() |>
  as_tibble() |>
  relocate(early_metastasis = y) 

gravier_clean |> 
  slice_sample(n = 10)
```

# Data Analysis

A PCA is done and the fit is saved.

```{r}
pca_fit <- gravier_clean |> 
  select(where(is.numeric)) |> # Looks only at numeric columns
  scale() |> # Scale data
  prcomp() # Performs PCA
```

## Visualization 1: PC coordinates

```{r}
pca_fit %>%
  augment(gravier_clean) %>% # add original dataset back in
  ggplot(aes(.fittedPC1, .fittedPC2, color = early_metastasis)) + 
  geom_point(size = 1.5) +
  scale_color_manual(
    values = c(poor = "#D55E00", good = "#0072B2")
  ) +
  theme_half_open(12) + background_grid()
```

## Visualization 2: 

```{r}
pca_fit_subset %>%
  tidy(matrix = "rotation")
```

```{r}
arrow_style <- arrow(
  angle = 20, ends = "first", type = "closed", length = grid::unit(8, "pt")
)
```

```{r}
pca_fit_subset %>%
  tidy(matrix = "rotation") %>%
  pivot_wider(names_from = "PC", names_prefix = "PC", values_from = "value") %>%
  ggplot(aes(PC1, PC2)) +
  geom_segment(xend = 0, yend = 0, arrow = arrow_style) +
  geom_text(
    aes(label = column),
    hjust = 1, nudge_x = -0.02, 
    color = "#904C2F"
  ) +
  xlim(-1.25, .5) + ylim(-.5, 1) +
  coord_fixed() + # fix aspect ratio to 1:1
  theme_minimal_grid(12)
```

## Figure 3

```{r}
pca_fit |> 
  tidy(matrix = "eigenvalues")
```

```{r}
pca_fit |> 
  tidy(matrix = "eigenvalues") |> 
  head(10) |> 
  ggplot(aes(PC, 
             percent)
         ) +
  geom_col(fill = "#56B4E9", 
           alpha = 0.8
           ) +
  scale_x_continuous(breaks = 1:9) +
  scale_y_continuous(
    labels = scales::percent_format(),
    expand = expansion(mult = c(0, 0.01))
  ) +
  theme_minimal_hgrid(12)
```

# Conclusion

ghjk
