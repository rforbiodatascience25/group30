---
title: "Group Document"
format:
  html:
    embed-resources: true
    toc: true
    toc-depth: 2
editor: visual
execute:
  echo: true
  cache: true
  freeze: auto
date: 2025-10-07
authors: 
- Isabella T. Christoffersen (s235342)
- Karolina Nordkamp (s244854)
- Malaika Khiljee (s245618)
- Kasia Muncha (s222846)
- Andreas Bach (s205869)
---

# Aim

The aim for this exercise is to practice our GitHub collaboration. We have done so by using the Gravier dataset and performing a little PC analysis (PCA). The PC analysis is heavily inspired by Claus O. Wilke's report (<https://clauswilke.com/blog/2020/09/07/pca-tidyverse-style/>).

# Load libraries

```{r}
#| message: false

library("tidyverse")
library(broom) 
library(cowplot)
```

# Load data

The Gravier data has been added to a data folder in the GitHub repository. The gravier data contains information of gene expression of 2905 genes from 168 patients, whether the patients eventually showed sign of metastasis is denoted in the 'y'-column where:

-   "poor": means early sign of metastasis

-   "good": means no sign of metastasis

```{r}
load("data/gravier.RData")
```

# Data wrangling

The loaded data consists of 2 large lists, so these are firstly combined into columns and transformed into a tibble. The bind_cols() function is used here and binds the columns in order. Usually, it would be preferred to use join() but in this case bind_cols() works.

The 'y'-column is renamed to 'early_metastasis.'

```{r}
gravier_clean <- gravier |>
  bind_cols() |>
  as_tibble() |>
  relocate(early_metastasis = y) 

gravier_clean |> 
  slice_sample(n = 10)
```

# Data Analysis

A PCA is done and the fit is saved.

```{r}
pca_fit <- gravier_clean |> 
  select(where(is.numeric)) |> 
  scale() |> 
  prcomp()
```

## Visualization 1: PC coordinates

This plot shows the PC1 against PC2 for each observation. There does not appear to be any clear separation between the two groups.

```{r}
pca_fit |>
  augment(gravier_clean) |>
  ggplot(aes(x = .fittedPC1, 
             y = .fittedPC2, 
             color = early_metastasis)
         ) + 
  geom_point(size = 1.5) +
  scale_color_manual(values = c(poor = "#D55E00", 
                                good = "#0072B2")
                     ) +
  theme_half_open(12) + 
  background_grid()
```

## Visualization 2: The rotation matrix

First some styling of the arrows.

```{r}
arrow_style <- arrow(angle = 20, 
                     ends = "first", 
                     type = "closed", 
                     length = grid::unit(8, "pt"))
```

Only a small subset from the pca_fit tibble is used to construct a readable plot. In the below plot the first 7 genes are shown.

```{r}
select_size <- 7

pca_fit |> 
  tidy(matrix = "rotation") |>
  pivot_wider(names_from = "PC", 
              names_prefix = "PC", 
              values_from = "value") |>
  head(select_size) |>
  ggplot(aes(x = PC1, 
             y = PC2,
             label = column)) +
  geom_segment(xend = 0, 
               yend = 0, 
               arrow = arrow_style) +
  geom_text(nudge_x = 0.02, 
            size = 3,
            color = "#904C2F") +
  xlim(-0.05, .075) + 
  ylim(-.025, 0.035) +
  theme_minimal_grid(12)
```

## Visualization 3: Variance explained by each PC

Below plot shows the variance explained by PC1 to PC10. In general these are very low meaning that each PC explains little of the differences seen between each observation.

```{r}
pca_fit |> 
  tidy(matrix = "eigenvalues") |> 
  head(10) |> 
  ggplot(aes(PC, 
             percent)
         ) +
  geom_col(fill = "#56B4E9", 
           alpha = 0.8) +
  scale_x_continuous(breaks = 1:10) +
  scale_y_continuous(labels = scales::percent_format()) +
  theme_minimal_hgrid(12)
```

# Conclusion

There is not much to conclude from the PCA (at least not based on how we understand it to work). However, the aim was completed nicely as we succeeded in combining our efforts into this report by using Git, though the work flow can still be improved upon.
